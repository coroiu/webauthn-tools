{"version":3,"file":"688.b11ff78570a44b11.js","mappings":"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","names":["i0","ctx_r1","createPasskey","error","ProfileComponent","constructor","route","this","destroy$","Subject","username","capabilities","ngOnInit","_this","paramMap","pipe","takeUntil","subscribe","params","get","queryParamMap","_ref","_asyncToGenerator","autoCreatePasskey","_x","apply","arguments","_this2","undefined","PublicKeyCredential","getClientCapabilities","console","log","conditionalCreate","challenge","Uint8Array","window","crypto","getRandomValues","navigator","credentials","create","mediation","publicKey","rp","name","user","id","TextEncoder","encode","displayName","pubKeyCredParams","type","alg","success","e","String","ngOnDestroy","next","complete","static","t","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","Xpm","selectors","standalone","features","decls","vars","consts","template","rf","ctx","ProfileComponent_span_7_Template","ProfileComponent_span_8_Template","ProfileComponent_ng_container_14_Template","ProfileComponent_ng_container_15_Template","ProfileComponent_ng_container_16_Template","CommonModule","i2","encapsulation"],"sourceRoot":"webpack:///","sources":["./src/app/pages/account-demo/profile/profile.component.html","./src/app/pages/account-demo/profile/profile.component.ts"],"sourcesContent":["<div class=\"page-container container-md\">\n  <h1>Account Demo: User profile</h1>\n  <p class=\"lead\">This page represents a logged in view.</p>\n\n  <h2>User: {{ username }}</h2>\n  <span class=\"text-success\" *ngIf=\"createPasskey.success\"\n    >A passkey was automatically registered</span\n  >\n  <span class=\"text-danger\" *ngIf=\"createPasskey.error\"\n    >Failed to create passkey: {{ createPasskey.error }}</span\n  >\n\n  <h2>Browser capabilities</h2>\n  <ul>\n    <li>\n      Conditional Create:\n      <ng-container *ngIf=\"capabilities.conditionalCreate === undefined\"\n        >Unknown</ng-container\n      >\n      <ng-container *ngIf=\"capabilities.conditionalCreate === false\"\n        >Not supported</ng-container\n      >\n      <ng-container *ngIf=\"capabilities.conditionalCreate === true\"\n        >Supported</ng-container\n      >\n    </li>\n  </ul>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\n\ntype Capabilities = {\n  conditionalCreate?: boolean;\n};\n\n@Component({\n  templateUrl: './profile.component.html',\n  standalone: true,\n  imports: [CommonModule],\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  protected username: string = '';\n  protected capabilities: Capabilities = {};\n  protected createPasskey: { error?: string; success?: boolean } = {};\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.username = params.get('username') || '';\n    });\n\n    this.route.queryParamMap\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async (params) => {\n        if (params.get('conditionalCreate') === 'true') {\n          this.autoCreatePasskey();\n        }\n      });\n  }\n\n  private async autoCreatePasskey() {\n    if ((PublicKeyCredential as any).getClientCapabilities === undefined) {\n      console.log('Conditional creation unavailable');\n      this.capabilities.conditionalCreate = false;\n      return;\n    }\n\n    const capabilities = await (\n      PublicKeyCredential as any\n    ).getClientCapabilities();\n    if (!capabilities.conditionalCreate) {\n      console.log('Conditional creation unavailable');\n      this.capabilities.conditionalCreate = false;\n      return;\n    }\n\n    const challenge = new Uint8Array(32);\n    window.crypto.getRandomValues(challenge);\n\n    this.capabilities.conditionalCreate = true;\n\n    try {\n      await window.navigator.credentials.create({\n        mediation: 'conditional',\n        publicKey: {\n          challenge: challenge,\n          rp: {\n            name: 'WebAuthn Tools Demo',\n          },\n          user: {\n            id: new TextEncoder().encode(this.username),\n            name: this.username,\n            displayName: this.username,\n          },\n          pubKeyCredParams: [\n            {\n              type: 'public-key',\n              alg: -7,\n            },\n          ],\n        },\n        // Needed because `mediation` is not yet supported in current TypeScript definitions\n      } as CredentialCreationOptions);\n      this.createPasskey.success = true;\n    } catch (e) {\n      this.createPasskey.error = String(e);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"],"x_google_ignoreList":[]}